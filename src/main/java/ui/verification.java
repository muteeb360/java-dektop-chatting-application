/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package ui;

/**
 *
 * @author jhonr
 */
import java.text.NumberFormat;
import javax.swing.JPanel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import backend.otp;
import java.time.Instant;

public class verification extends javax.swing.JFrame {

    // Variables declaration - do not modify                     
    private javax.swing.JLabel otp_label;
    private javax.swing.JTextField otp_textfield;
    private javax.swing.JLabel verification_label;
    private static javax.swing.JPanel verification_panel;
    private javax.swing.JButton verify_btn;
    protected static String asker_page;
    private javax.swing.JLabel validator_label;
    public static int approve;

    // End of variables declaration  
    /**
     * Creates new form verification
     */
    public verification() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        verification_panel = new javax.swing.JPanel();
        verification_label = new javax.swing.JLabel();
        otp_label = new javax.swing.JLabel();
        otp_textfield = new javax.swing.JTextField();
        limit();
        verify_btn = new javax.swing.JButton();
        validator_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        verification_panel.setBackground(new java.awt.Color(57, 55, 92));

        verification_label.setBackground(new java.awt.Color(57, 55, 92));
        verification_label.setFont(new java.awt.Font("Yu Gothic UI", 1, 48)); // NOI18N
        verification_label.setForeground(new java.awt.Color(255, 255, 255));
        verification_label.setText("Verification");

        otp_label.setBackground(new java.awt.Color(57, 55, 92));
        otp_label.setFont(new java.awt.Font("Yu Gothic UI", 1, 36)); // NOI18N
        otp_label.setForeground(new java.awt.Color(255, 255, 255));
        otp_label.setText("Enter OTP :");

        otp_textfield.setFont(new java.awt.Font("Yu Gothic UI", 0, 24)); // NOI18N
        otp_textfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        otp_textfield.setToolTipText("");
        otp_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otp_textfieldActionPerformed(evt);
            }
        });

        verify_btn.setBackground(new java.awt.Color(99, 126, 107));
        verify_btn.setFont(new java.awt.Font("Yu Gothic UI", 1, 36)); // NOI18N
        verify_btn.setForeground(new java.awt.Color(255, 255, 255));
        verify_btn.setText("Verify");
        verify_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        verify_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                verify_btnMouseClicked(evt);
            }
        });
        verify_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verify_btnActionPerformed(evt);
            }
        });

        validator_label.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        validator_label.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout verification_panelLayout = new javax.swing.GroupLayout(verification_panel);
        verification_panel.setLayout(verification_panelLayout);
        verification_panelLayout.setHorizontalGroup(
                verification_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, verification_panelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(verification_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, verification_panelLayout.createSequentialGroup()
                                                .addComponent(verification_label)
                                                .addGap(367, 367, 367))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, verification_panelLayout.createSequentialGroup()
                                                .addComponent(verify_btn)
                                                .addGap(385, 385, 385))))
                        .addGroup(verification_panelLayout.createSequentialGroup()
                                .addGap(179, 179, 179)
                                .addComponent(otp_label)
                                .addGap(75, 75, 75)
                                .addGroup(verification_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(verification_panelLayout.createSequentialGroup()
                                                .addComponent(otp_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 335, Short.MAX_VALUE))
                                        .addComponent(validator_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        verification_panelLayout.setVerticalGroup(
                verification_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(verification_panelLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(verification_label)
                                .addGap(115, 115, 115)
                                .addGroup(verification_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(otp_label)
                                        .addComponent(otp_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(validator_label)
                                .addGap(82, 82, 82)
                                .addComponent(verify_btn)
                                .addContainerGap(279, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(verification_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(verification_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void otp_textfieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void verify_btnMouseClicked(java.awt.event.MouseEvent evt) {
        String temp_otp = String.valueOf(otp.acquireOtp());
        String user_otp = otp_textfield.getText();
        Instant exptime = otp.acquireTime();
        if (user_otp.equals(temp_otp) && Instant.now().isBefore(exptime)) {
            if (asker_page == "login") {
                pages.change("home", "verification");
            } else if (asker_page == "signup") {
                pages.change("login", "");
                approve = 1;
                System.out.println("login approved. approve stae : " + approve);
            }
        } else {
            validator_label.setText("*Invalid otp");
        }

    }

    private void verify_btnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void limit() {
        //code for limiting entering values to 6 only
        ((AbstractDocument) otp_textfield.getDocument()).setDocumentFilter(new DocumentFilter() {
            public void insertString(DocumentFilter.FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
                if (fb.getDocument().getLength() + string.length() <= 6 && string.matches("\\d*")) {
                    super.insertString(fb, offset, string, attr);
                }
            }

            public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                if (fb.getDocument().getLength() + text.length() - length <= 6 && text.matches("\\d*")) {
                    super.replace(fb, offset, length, text, attrs);
                }
            }
        });
    }

    public static JPanel rtn_verificationpanel() {
        verification v = new verification();
        v.initComponents();
        return verification_panel;
    }

}
